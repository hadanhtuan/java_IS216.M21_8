/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package view;

import java.awt.Component;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author phamq
 */
public class formOrder extends javax.swing.JInternalFrame {

    /**
     * Creates new form temp2
     */
    public formOrder() {
        initComponents();
        BasicInternalFrameUI bi = (BasicInternalFrameUI) this.getUI();
        bi.setNorthPane(null);
        loadData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listCars = new javax.swing.JTable();

        setBackground(new java.awt.Color(0, 0, 51));
        setOpaque(true);
        setPreferredSize(new java.awt.Dimension(1109, 680));

        jPanel1.setBackground(new java.awt.Color(0, 0, 51));
        jPanel1.setPreferredSize(new java.awt.Dimension(1109, 680));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("DANH SÁCH  XE");

        listCars.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        listCars.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        listCars.setRowHeight(160);
        listCars.setRowMargin(4);
        listCars.setShowGrid(true);
        listCars.setShowVerticalLines(false);
        listCars.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listCarsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listCars);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 525, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void listCarsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listCarsMouseClicked
        int sl = processes.getData.getCountMaXe(listCar.get(listCars.getSelectedRow()).getMaLX());

        if (sl > 0) {
            try {
                int index = listCars.getSelectedRow();

                Objects.Cars.Instance = listCar.get(index);

                System.out.println(Objects.Cars.Instance.getMaLX());

                formProductDetail frm = new formProductDetail();
                frm.setVisible(true);
                System.out.println("Open new form succesfully!");
            } catch (Exception e) {
                System.out.println("Open new form failed");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Số lượng xe đã hết, vui lòng chọn xe khác!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        }


    }//GEN-LAST:event_listCarsMouseClicked
    public List<Objects.Cars> listCar = processes.getData.getCars();

    public void loadData() {
        System.out.println("So luong phan tu" + listCar.size());
        DefaultTableModel model = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }

        };

//        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
//        centerRenderer.setHorizontalAlignment(JLabel.CENTER);
//        listCars.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
//        listCars.getColumnModel().getColumn(1).setCellRenderer(centerRenderer);
//        listCars.getColumnModel().getColumn(2).setCellRenderer(centerRenderer);
//        listCars.getColumnModel().getColumn(3).setCellRenderer(centerRenderer);
//        listCars.getColumnModel().getColumn(4).setCellRenderer(centerRenderer);
        if (listCar != null) {

            System.out.println("Start Table");
            model.addColumn("STT");
            model.addColumn("Tên Xe");
            model.addColumn("Số chỗ ngồi");
            model.addColumn("Số lượng");
            model.addColumn("Giá thuê");
            model.addColumn("Hình Ảnh nội thất");
            model.addColumn("Hình ảnh bên ngoài");
            int i = 1;
            try {
                for (Objects.Cars car : listCar) {
                    String stt = String.valueOf(i + 0);
                    model.addRow(new Object[]{
                        stt, car.getTenLX(), car.getSoCho(), car.getSoLuong(), car.getGia(), car.getImageNgoai(), car.getImageNoiThat()
                    });
                    System.out.println(car.getTenLX());
                    i++;
                }
            } catch (Exception e) {
                System.out.println("Can't add data!");
            }

            listCars.setModel(model);
            listCars.getColumnModel().getColumn(5).setCellRenderer(new ImageRender());
            listCars.getColumnModel().getColumn(6).setCellRenderer(new ImageRender());

            DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
            centerRenderer.setHorizontalAlignment(JLabel.CENTER);
            listCars.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
            listCars.getColumnModel().getColumn(1).setCellRenderer(centerRenderer);
            listCars.getColumnModel().getColumn(2).setCellRenderer(centerRenderer);
            listCars.getColumnModel().getColumn(3).setCellRenderer(centerRenderer);
            listCars.getColumnModel().getColumn(4).setCellRenderer(centerRenderer);
      

        } else {
            System.out.println("ListCar is null");
        }

    }

    private class ImageRender extends DefaultTableCellRenderer {

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {

            try {
                //String photoName = value.toString();
                BufferedImage img = (BufferedImage) value;
                ImageIcon imgIcon = new ImageIcon(new ImageIcon(img).getImage().getScaledInstance(156, 128, Image.SCALE_DEFAULT));
                return new JLabel(imgIcon);
            } catch (Exception ex) {
                Logger.getLogger(formOrder.class.getName()).log(Level.SEVERE, null, ex);
            }
            return null;

        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable listCars;
    // End of variables declaration//GEN-END:variables
}
