/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package view;

import java.util.HashMap;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;
import net.sourceforge.barbecue.BarcodeException;
import net.sourceforge.barbecue.Barcode;

/**
 *
 * @author phamq
 */
public class formRevenue extends javax.swing.JInternalFrame {

    /**
     * Creates new form formFindVehicleStatus
     */
    public formRevenue() throws ClassNotFoundException, SQLException {
        this.conn = connectDB.DBO.getOracleConnection();
        conn.setTransactionIsolation(Connection.TRANSACTION_READ_COMMITTED);
        initComponents();
         initComponents();
        BasicInternalFrameUI bi = (BasicInternalFrameUI)this.getUI();
        bi.setNorthPane(null);
        LoadData();
    }
    private Connection conn;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        namHD = new com.toedter.calendar.JYearChooser();
        thangHD = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnTopKH = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listDoanhThu = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        xuatDoanhThu = new javax.swing.JButton();

        setBackground(new java.awt.Color(17, 43, 60));
        setForeground(java.awt.Color.pink);
        setOpaque(true);
        setPreferredSize(new java.awt.Dimension(1109, 680));
        setVisible(true);

        jPanel1.setBackground(new java.awt.Color(0, 0, 51));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("TRA CỨU DOANH THU");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, -1, -1));
        jPanel1.add(namHD, new org.netbeans.lib.awtextra.AbsoluteConstraints(209, 90, 64, 24));

        thangHD.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        thangHD.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        thangHD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                thangHDMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                thangHDMouseReleased(evt);
            }
        });
        jPanel1.add(thangHD, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 90, 55, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Năm");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(163, 93, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Tháng");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, -1, -1));

        btnTopKH.setBackground(new java.awt.Color(0, 0, 51));
        btnTopKH.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnTopKH.setForeground(new java.awt.Color(255, 255, 255));
        btnTopKH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/ok_45px.png"))); // NOI18N
        btnTopKH.setText("TOP KHÁCH HÀNG");
        btnTopKH.setToolTipText("");
        btnTopKH.setActionCommand("");
        btnTopKH.setPreferredSize(new java.awt.Dimension(75, 45));
        btnTopKH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTopKHMouseClicked(evt);
            }
        });
        btnTopKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTopKHActionPerformed(evt);
            }
        });
        jPanel1.add(btnTopKH, new org.netbeans.lib.awtextra.AbsoluteConstraints(636, 70, 240, -1));

        listDoanhThu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(listDoanhThu);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 125, 1073, 514));

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton2.setText("Tìm kiếm");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(324, 90, 99, 24));

        xuatDoanhThu.setBackground(new java.awt.Color(0, 0, 51));
        xuatDoanhThu.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        xuatDoanhThu.setForeground(new java.awt.Color(255, 255, 255));
        xuatDoanhThu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/ok_45px.png"))); // NOI18N
        xuatDoanhThu.setText("Xuất doanh thu");
        xuatDoanhThu.setPreferredSize(new java.awt.Dimension(75, 45));
        xuatDoanhThu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xuatDoanhThuActionPerformed(evt);
            }
        });
        jPanel1.add(xuatDoanhThu, new org.netbeans.lib.awtextra.AbsoluteConstraints(887, 69, 196, -1));

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTopKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTopKHActionPerformed
        
        
        
    }//GEN-LAST:event_btnTopKHActionPerformed

    private void thangHDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_thangHDMouseClicked
        LoadData();
    }//GEN-LAST:event_thangHDMouseClicked

    private void thangHDMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_thangHDMouseReleased
        LoadData();
    }//GEN-LAST:event_thangHDMouseReleased

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        LoadData();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void xuatDoanhThuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xuatDoanhThuActionPerformed
       String ThangHD = thangHD.getItemAt(thangHD.getSelectedIndex()).toString();
        String NamHD = String.valueOf(namHD.getValue());
        
        try{
            ExportReport(ThangHD, NamHD);
        }catch(Exception ex)
        {
            System.out.println(ex);
        }
    }//GEN-LAST:event_xuatDoanhThuActionPerformed

    private void btnTopKHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTopKHMouseClicked
        ExportReportDoanhThu();
    }//GEN-LAST:event_btnTopKHMouseClicked
    
    public void ExportReport(String ThangHD, String NamHD) {

        try {
            System.out.println("Load Report.....");
            HashMap<String, Object> map = new HashMap<String, Object>();
            map.put("ThangHD", ThangHD);
            map.put("NamHD", NamHD);
            System.out.println("Mapped....");
            JasperReport rpt = JasperCompileManager.compileReport("src\\Resources\\ReportXuatDoanhThu.jrxml");
            System.out.println("Report getted!");

            System.out.println("Connected to database!");

            try {
                JasperPrint p = (JasperPrint) JasperFillManager.fillReport(rpt, map, conn);
                System.out.println("Report mapped!");
                JasperViewer.viewReport(p, false);
            } catch (Exception e) {
                System.out.println("BUG IS" + e);
            }

        } catch (Exception ex) {
            System.out.println("Err is " + ex);
        }
    }
    
     public void ExportReportDoanhThu() {

        try {
            System.out.println("Load Report.....");
           
         
            System.out.println("Mapped....");
            JasperReport rpt = JasperCompileManager.compileReport("src\\Resources\\ReportDoanhThuKhachHang.jrxml");
            System.out.println("Report getted!");

            System.out.println("Connected to database!");

            try {
                JasperPrint p = (JasperPrint) JasperFillManager.fillReport(rpt,null, conn);
                System.out.println("Report mapped!");
                JasperViewer.viewReport(p, false);
            } catch (Exception e) {
                System.out.println("BUG IS" + e);
            }

        } catch (Exception ex) {
            System.out.println("Err is " + ex);
        }
    }
    
    public void LoadData()
    {
        String ThangHD = thangHD.getItemAt(thangHD.getSelectedIndex()).toString();
        String NamHD = String.valueOf(namHD.getValue());
        System.out.println("Tháng hóa đơn: "+ ThangHD);
        System.out.println("Năm hóa đơn: "+ NamHD);
        List<Objects.Revenue> listRevenue = new ArrayList<>();
        try{
            
            Statement st = conn.createStatement();
            
            String query = "Select SoHoaDon, SoHopDong, MaNV, NgayHoaDon, TriGia, extract(month from NgayHoaDon) as ThangHD,extract(year from NgayHoaDon) as NamHD from HoaDon where extract(month from NgayHoaDon) ="+ThangHD+"and extract(year from NgayHoaDon) ="+NamHD;
            
            ResultSet rs = st.executeQuery(query);
            
            while(rs.next())
            {
                Objects.Revenue r = new Objects.Revenue(rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5));
                listRevenue.add(r);
            }            
            st.close();
            rs.close();
            
        DefaultTableModel model = new DefaultTableModel()                
        {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; 
            }
        };
        
        model.addColumn("Số Hóa Đơn");
        model.addColumn("Số Hợp Đồng");
        model.addColumn("Mã nhân viên");
        model.addColumn("Ngày Hóa Đơn");
        model.addColumn("Trị Giá");
        
        for(Objects.Revenue r : listRevenue)
        {
            model.addRow(new Object[]{
            r.getSoHoaDon(),r.getSoHopDong(),r.getMaNV(),r.getNgayHoaDon(),r.getTriGia()
            });
        }
        
        listDoanhThu.setModel(model);
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        listDoanhThu.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
        listDoanhThu.getColumnModel().getColumn(1).setCellRenderer( centerRenderer );
        listDoanhThu.getColumnModel().getColumn(2).setCellRenderer( centerRenderer );
        listDoanhThu.getColumnModel().getColumn(3).setCellRenderer( centerRenderer );
        listDoanhThu.getColumnModel().getColumn(4).setCellRenderer( centerRenderer );
        }catch (SQLException ex) {
            Logger.getLogger(formRevenue.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnTopKH;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable listDoanhThu;
    private com.toedter.calendar.JYearChooser namHD;
    private javax.swing.JComboBox<String> thangHD;
    private javax.swing.JButton xuatDoanhThu;
    // End of variables declaration//GEN-END:variables
}
